apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: chatbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: MYSQL_HOST
              value: "mysql-service"
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: mysql-user
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: mysql-database
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: aws-secret-access-key
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: aws-region
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: s3-bucket-name
            - name: CHAT_INFERENCE_URL
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: chat-inference-url
            - name: PYTHONUNBUFFERED
              value: "1"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 90
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
      restartPolicy: Always 